# Generated by Django 2.2.2 on 2019-06-18 02:19

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Scheduler',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('redis_key', models.CharField(default='', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='SchedulerRuntime',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('runtime_type', models.CharField(choices=[('S', 'SCRAPER'), ('C', 'CHECKER')], default='P', max_length=1)),
                ('next_action_time', models.DateTimeField(default=datetime.datetime.now)),
                ('next_action_factor', models.FloatField(default='')),
                ('num_zero_actions', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Scraper',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('status', models.CharField(choices=[('A', 'ACTIVE'), ('M', 'MANUAL'), ('P', 'PAUSED'), ('I', 'INACTIVE')], default='P', help_text='Runtime status of the scraper, used by scheduling mechanism.', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='WebSite',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('url', models.URLField()),
                ('note', models.TextField(default='')),
                ('status', models.IntegerField(default=1)),
                ('scheduler', models.ManyToManyField(null=True, to='monitor.Scheduler')),
                ('scraper', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='monitor.Scraper')),
                ('scraper_runtime', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='monitor.SchedulerRuntime')),
            ],
        ),
        migrations.CreateModel(
            name='DomainDnsinfo',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=30)),
                ('A_record', models.CharField(default='', max_length=30)),
                ('Mx_record', models.CharField(default='', max_length=30)),
                ('status', models.IntegerField(default=1)),
                ('website', models.ManyToManyField(null=True, to='monitor.WebSite')),
            ],
        ),
    ]
